affinity: {}
image:
  repository: directxman12/k8s-prometheus-adapter-amd64
  tag: v0.8.2
  pullPolicy: IfNotPresent
logLevel: 4
metricsRelistInterval: 1m
listenPort: 6443
nodeSelector: {}
priorityClassName: ""
replicas: 1
rbac:
  create: true
psp:
  create: false
serviceAccount:
  create: true
  name:
resources: {}
prometheus:
service:
  annotations: {}
  port: 443
  type: ClusterIP

prometheus:
  url: http://kube-prometheus-stack-prometheus.monitoring.svc
  port: 9090
  path: ""

rules:
  custom:
  - seriesQuery: 'nv_inference_queue_duration_us{namespace="deepops-triton"}'
    resources:
      overrides:
        namespace: {resource: "namespace"}
        pod: {resource: "pod"}
    name:
      matches: "nv_inference_queue_duration_us"
      as: "nv_inference_custom_avg_time_queue_ms"
    metricsQuery: "avg(delta(nv_inference_queue_duration_us{<<.LabelMatchers>>}[1m])/(1+delta(nv_inference_request_success{<<.LabelMatchers>>}[1m]))/1000) by (<<.GroupBy>>)"
