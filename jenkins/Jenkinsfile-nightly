pipeline {
  agent any
  environment {
    DEEPOPS_FULL_INSTALL = ''
    DEEPOPS_VAGRANT_OS = 'ubuntu'
  }
  stages {
    stage('Stop Any Old Builds') {
      steps {
        milestone label: '', ordinal:  Integer.parseInt(env.BUILD_ID) - 1
        milestone label: '', ordinal:  Integer.parseInt(env.BUILD_ID)
      }
    }
    stage('Cluster Up') {
	parallel {
	  stage('Ubuntu K8S Multi') {
            build job: 'kubernetes', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'true'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'ubuntu')]
	  }
	  stage('Ubuntu K8S Single') {
            build job: 'kubernetes', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'false'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'ubuntu')]
	  }
	  stage('CentOS K8S Multi') {
            build job: 'kubernetes', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'true'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'centos']
	  }
	  stage('CentOS K8S Single') {
            build job: 'kubernetes', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'false'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'centos']
	  }
	  stage('Ubuntu Slurm Multi') {
            build job: 'slurm', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'true'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'ubuntu')]
	  }
	  stage('Ubuntu Slurm Single') {
            build job: 'slurm', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'false'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'ubuntu')]
	  }
	  stage('CentOS Slurm Multi') {
            build job: 'slurm', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'true'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'centos']
	  }
	  stage('CentOS Slurm Single') {
            build job: 'slurm', 
              parameters: [string(name: 'DEEPOPS_FULL_INSTALL', value: 'false'),
			   string(name: 'DEEPOPS_VAGRANT_OS', value: 'centos']
	  }
        }
      }
    }
  }
}
